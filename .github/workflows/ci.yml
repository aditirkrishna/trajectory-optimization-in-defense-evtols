name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black==24.3.0 ruff==0.6.2 isort==5.13.2 mypy==1.10.0
          pip install -r perception-layer/requirements.txt
          pip install -r planning-layer/requirements.txt
          pip install -r vehicle-layer/requirements.txt

      - name: Run Black
        run: black --check --diff .

      - name: Run isort
        run: isort --check-only --diff .

      - name: Run Ruff
        run: ruff check .

      - name: Run mypy
        run: mypy --config-file=pyproject.toml perception-layer/src planning-layer/src vehicle-layer/src
        continue-on-error: true

  test-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-xdist
          pip install -e perception-layer/
          pip install -e planning-layer/
          pip install -e vehicle-layer/

      - name: Run tests with coverage
        run: |
          pytest perception-layer/tests -v --cov=perception-layer/src --cov-report=xml --cov-report=term
          pytest planning-layer/tests -v --cov=planning-layer/src --cov-report=xml --cov-report=term
          pytest vehicle-layer/tests -v --cov=vehicle-layer/src --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  test-windows:
    name: Test on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -e perception-layer/
          pip install -e planning-layer/
          pip install -e vehicle-layer/

      - name: Run tests
        run: |
          pytest perception-layer/tests -v --maxfail=5
          pytest planning-layer/tests -v --maxfail=5
          pytest vehicle-layer/tests -v --maxfail=5

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, test-ubuntu]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e perception-layer/
          pip install -e planning-layer/
          pip install -e vehicle-layer/

      - name: Run integration tests
        run: python integration_test.py
